[SUBROUTINE]
version = 1.14
icon = lathe-surface.png
name = _("Turning")
type = turning
help = _("<b>External straight turning with optional radiuses</b>&#10;Uses compensation with a radius&#10;Cutter orientation should be 1, 2, 9 or None")
order = act hx b_x e_x hz b_z e_z ch c r hf fin peck pc pcr

[PARAM_ACT]
name = _("Active")
icon = enable.png
type = bool
value = 1

[PARAM_HX]
name = _("X axis")
type = sub-header

[PARAM_B_X]
name = _("Begin diameter")
type = gcode
icon = x.png
value = #<_wp_dia_od>
minimum_value = 0.0
not_allowed = 0

[PARAM_E_X]
name = _("End diameter")
type = float
icon = x-end.png
value = 5
minimum_value = 0.0

[PARAM_HZ]
name = _("Z axis")
type = sub-header

[PARAM_B_Z]
name = _("Begin")
type = float
icon = z.png
value = 0.0
metric_value = 0.0

[PARAM_E_Z]
name = _("End")
type = float
icon = z-end.png
value = -1.0
metric_value = -25.0

[PARAM_H2]
name = _("Options")
type = sub-header
hidden = 1

[PARAM_ROPT]
name = _("End radius")
type = combo
options = _("None w/ compensation=0:None w/o compensation=1:Full radius=2:Stop at Begin diameter=3")
value = 1
;tool_tip = _("Less than cutter radius means no radius at end")
;icon = inner-radius.png
header = h2
value_changed =
	parent.get_param('param_r').set_grayed(new_val < '2')
hidden = 1


[PARAM_R]
name = _("Radius")
type = float
value = 0.0
metric_value = 0.0
minimum_value = 0.0
tool_tip = _("Less than cutter radius means no radius at end")
icon = inner-radius.png
header = h2
hidden=1

[PARAM_CH]
name = _("Chamfer")
type = sub-header

[PARAM_C]
name = _("Chamfer")
type = float
value = 0.0
metric_value = 0.0
minimum_value = 0.0
tool_tip = _("Chamfer edge")
icon = inner-radius.png

[PARAM_HF]
name = _("Finishing")
type = sub-header
hidden = 1

[PARAM_FIN]
name = _("Number of passes")
icon = finish.png
type = int
value = 1
minimum_value = 0
tool_tip = _("Or spring passes")
header = hf
hidden = 1

[PARAM_PECK]
name = _("Peck turning")
type = sub-header
tool_tip = _("Peck turning - chip breaking")

[PARAM_PC]
name = _("Peck Distance")
icon = len-opt-x.png
type = float
value = 0.0
minimum_value = 0
tool_tip = _("0 = no pecking")

[PARAM_PCR]
name = _("Pecking retract")
icon = lx-clear.png
type = float
value = 0.20
minimum_value = 0
tool_tip = _("0 = Only dwell")


[INIT]
content =
	a = parent.get_param('param_ropt').get_attr('value')
	parent.get_param('param_r').set_grayed(a < '2')

[VALIDATION]
content =
	if #param_act == 1 and False:
		if self.check_hash('#param_b_x', 0.6) < self.check_hash('#param_e_x', 0.5) :
			self.msg_inv(_('Begin diameter must be greater than End diameter'), 1)
			VALIDATED = False

		bz = self.check_hash('#param_b_z', 0.0)
		ez = self.check_hash('#param_e_z', 0.0)
		if (bz > ez) and TOOL_TABLE.get_tool_orient() not in [0, 2, 9] :
			self.msg_inv(_('Cutter orientation should be 2, 9 or 0'), 3)
		elif (bz < ez) and TOOL_TABLE.get_tool_orient() not in [0, 1, 9] :
			self.msg_inv(_('Cutter orientation should be 1, 9 or 0'), 3)

[CALL]
content =
	(begin #sub_name)
	(author : Fernand Veilleux, Mit Zot)



	o<#self_id_act> if [#param_act]
	    o<#self_id_chmfr> if [#param_c GT #<_rough_cut> AND #<_task>]
	        (DEBUG, Chamfer value greater than roughing depth of cut!)
	        o<stop> CALL
	    o<#self_id_chmfr> endif


		o<turning> CALL [#param_b_x] [#param_e_x] [#param_b_z] [#param_e_z] [#param_fin] [#param_r] [#param_ropt] [#param_c] [#param_pc] [#param_pcr]
	o<#self_id_act> endif

	(end #sub_name)
