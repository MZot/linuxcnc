(creates a regular polygon)
o<fv_polygon> sub (CALL [#cx][#cy][#n][#radius][#rot][#opt][#dir][#param_s][#dpt][#fcut])
	#<cx>         =  #1
	#<cy>         =  #2
	#<edges>      =  #3
	#<final_rad>  =  ABS[#4]
	#<angle>      =  #5
	#<cut_opt>    =  #6 (Inside=0:Outside=1:On the line=2:Create a pocket=3)
	#<dir>	      =  #7 (Clockwise=2:Counter-Clockwise=3)
	#<cut_start>  =  #8
	#<cut_depth>  =  #9
	#<show_final> = #10

	(Check validity of params passed)

	o<l00-1> if [#<final_rad> EQ 0]
		(debug,Polygon: bad radius - EXITING)
		(print,Polygon: bad radius - EXITING)
		(AXIS,notify,Polygon: bad radius - EXITING)
		M2        
	o<l00-1> endif
	
	o<l00-2> if [#<cut_depth> GE #<cut_start>]
    	(debug,Polygon: bad cut_depth #<cut_depth> - EXITING)
        (print,Polygon: bad cut_depth #<cut_depth> - EXITING)
    	(AXIS,notify,Polygon: bad cut_depth - EXITING)
    	M2
	o<l00-2> endif

	(end validity check)
	
	o<if-dir> if [#<dir> EQ 3]
		#<circ> = 360
	o<if-dir> else
		#<circ> = -360
	o<if-dir> endif
	
	#<ang> = [[180 - [360 / #<edges>]] / 2]
	#<h> = [#<final_rad> * SIN[#<ang>]]
	
	o<pocket> if [[#<cut_opt> EQ 3] AND [#5410 GT 0] AND [#<h> GT #5410]] (...a pocket and tool dia > 0)
		#<cycle_count> = FUP[#<h> / #5410 / #<_pocket_ratio>]
		#<min_rad> = [#<_pocket_ratio> * #5410 / SIN[#<ang>]]
	o<pocket> else
		#<cycle_count> = 1
		#<min_rad> = #<final_rad>
	o<pocket> endif
	
	#<cycle> = 0

	(expanding from mid to max size)
	o<wh_cycle> while [#<cycle> LT #<cycle_count>] 
		o<wh_cycle-0> if [#<cycle> EQ #<cycle_count> - 1]
			#<radius> = #<final_rad>
			#<t_h> = #<h>
		o<wh_cycle-0> else
			#<radius> = [#<min_rad> + [#<final_rad> - #<min_rad>] * #<cycle> / [#<cycle_count> - 1]]
			#<t_h> = [#<radius> / #<final_rad> *  #<h>]
		o<wh_cycle-0> endif	 
		
		#<cycle> = [#<cycle> + 1]
	
		(calc first and second points)
		o<rotate-xy> CALL [#<cx> + #<radius>] [#<cy>] [#<cx>] [#<cy>] [#<angle>]
			#<x1> = #<_rotate_result_x>
			#<y1> = #<_rotate_result_y>
		o<rotate-xy> CALL [#<cx> + #<radius>] [#<cy>] [#<cx>] [#<cy>] [#<angle> + #<circ> / #<edges>]
			#<x2> = #<_rotate_result_x>
			#<y2> = #<_rotate_result_y>
		o<rotate-xy> CALL [#<cx> + #<radius>] [#<cy>] [#<cx>] [#<cy>] [#<angle> - #<circ> / #<edges>]
			#<xlast> = #<_rotate_result_x>
			#<ylast> = #<_rotate_result_y>
	
		o<len_calc> if [#<cut_opt> EQ 1] (Outside)
			#<t_h> = [#<t_h> + #5410 / 2]
			#<len> = [[SIN[90 - #<ang>] * #<t_h> * 2 / SIN[#<ang>]]]
		o<len_calc> elseif [#<cut_opt> EQ 2] (On the line)
			#<len> = [#<radius> * COS[#<ang>] * 2]
		o<len_calc> else (Inside or pocket)
			#<t_h> = [#<t_h> - #5410 / 2]
			#<len> = [SIN[90 - #<ang>] * #<t_h> * 2 / SIN[#<ang>]]
		o<len_calc> endif		
		
		#<_cut_to:seg_z> = #<cut_start>

		#<final_loop> = 1
		#<final_loop_to_do> = 1
		o<will_show_final> if [#<cycle> EQ #<cycle_count>]
			/ #<show_final> = [#10 + 10]
		o<will_show_final> else
			#<show_final> = 0
		o<will_show_final> endif
	
		F#<_ffeed>
		S#<_spindle_rpm>
		
		o<fv_entry-angle> call [#<xlast>] [#<ylast>] [#<x1>] [#<y1>] [#<x2>] [#<y2>] [#<dir>] [#<cut_opt>] [#<cut_start>]

		(down to cut_depth)
		o<wh010> while [[#<_cut_to:seg_z> GT #<cut_depth>] OR #<final_loop> OR #<show_final>]
		
			o<wh010-final> if [#<_cut_to:seg_z> GT #<cut_depth>]
				#<_cut_to:loop_end_z> = [#<_cut_to:seg_z> + #<_depth_step>]
				o<wh-if1> if [#<_cut_to:loop_end_z> LT #<cut_depth>]
					#<_cut_to:loop_end_z> = #<cut_depth>
				o<wh-if1> endif
	
				o<oval_plunge> if [#<_plunge_down>]
					F#<_vertical_feed>
					G1 Z#<_cut_to:loop_end_z>
					#<_cut_to:seg_z> = #<_cut_to:loop_end_z>
					F#<_ffeed>
				o<oval_plunge> endif
			o<wh010-final> else
				#<final_loop> = 0
				o<final_seg> if [#<final_loop_to_do>]
					#<final_loop_to_do> = -1
				o<final_seg> endif
				F#<_final_feed>
				S#<_final_spindle_rpm>
			o<wh010-final> endif
		
			#<rot> = #<angle>
			o<polygon-cycle-g> repeat [#<edges>]
				#<rot> = [#<rot> + #<circ> / #<edges>]
				o<rotate-xy> CALL [#<cx> + #<radius>] [#<cy>] [#<cx>] [#<cy>] [#<rot>]
				o<fv_cut-to> CALL [#<_rotate_result_x>] [#<_rotate_result_y>] [#<len>] [0]
			o<polygon-cycle-g> endrepeat
			o<final_seg-0> if [#<final_loop_to_do> EQ -1]
				#<final_loop_to_do> = 0
				o<fv_cut-to> CALL [#<_final:x>] [#<_final:y>] [#5410 / 2] [1]
			o<final_seg-0> endif
		
			(Draw reference lines)			
			o<show_final_cut> if [#<final_loop> EQ 0]
				o<show_final_cut-1> if [#<_show_final_cuts> AND [#<show_final> EQ 11] AND #<_show_bottom_cut>] 
					G40
					G0 X#<x1> Y#<y1>
					#<show_final> = 8
				o<show_final_cut-1> elseif [#<_show_final_cuts> AND [#<show_final> EQ 11] OR [#<show_final> EQ 8]]
					#<_cut_to:seg_z> = #<cut_start>
					#<cut_depth> = #<cut_start>
					#<_cut_to:loop_end_z> = #<cut_start>
					G40
					G0 X#<x1> Y#<y1>
					G0 Z#<cut_start>				
					#<show_final> = 1
				o<show_final_cut-1> else
					#<show_final> = 0
				o<show_final_cut-1> endif	
			o<show_final_cut> endif			
		o<wh010> endwhile (down)
	o<wh_cycle> endwhile (expand)
	
	G0 Z#<_z_clear>
	G40	
		
o<fv_polygon> endsub
