(info: straight slot, in/out/pocket cutting, cw/ccw, rotated)

(CALL[#x][#y][#w][#len][#rot][#opt][#dir][#cut_start][#dpt][#finalcut][centered])

o<fv_slot> sub

	(Assign significative names to params passed)
	#<x>          =  #1
	#<y>          =  #2
	#<final_w>    =  ABS[#3]
	o<slot_center> if [#11] (centered)
		#<l>      =  ABS[#4 / 2]
		#<lm>     =  [#<l>]
	o<slot_center> else
		#<l>      = ABS[#4]
		#<lm>     = 0
	o<slot_center> endif
	#<rot>        =  #5 (angle)
	#<cut_opt>    =  #6 (Inside=0:Outside=1:On the line=2:Create a pocket=3)
	#<dir>	      =  #7 (Clockwise=2:Counter-Clockwise=3)
	#<cut_start>  =  #8
	#<cut_depth>  =  #9
	#<show_final> = #10

	(Check validity of params passed)
	o<l0> if [#<final_w> EQ 0.0]
		(debug,Slot: bad width #<w> - EXITING)
		(print,Slot: bad width #<w> - EXITING)
		(AXIS,notify,Slot: bad w - EXITING)
		M2
	o<l0> endif

	o<l2> if [#<cut_depth> GE #<cut_start>]		
		(debug,Slot: bad cut_depth #<cut_depth> - EXITING)
		(print,Slot: bad cut_depth #<cut_depth> - EXITING)
		(AXIS,notify,Slot: bad cut_depth - EXITING)
		M2
	o<l2> endif
	(end validity check)

	o<pocket> if [[#<cut_opt> EQ 3] AND [#5410 GT 0] AND [#<final_w> GT #5410]] (...a pocket and tool dia GT 0)
		#<cycle_count> = FUP[#<final_w> / #5410 / #<_pocket_ratio> / 2]
		#<min_w> = [#<_pocket_ratio> * #5410 * 2]
	o<pocket> else
		#<cycle_count> = 1
		#<min_w> = #<final_w>
	o<pocket> endif
	
	#<cycle> = 0
	
	o<wh_cycle> while [#<cycle> LT #<cycle_count>]
		o<wh_cycle-0> if [#<cycle> EQ #<cycle_count> - 1]
			#<w> = #<final_w>
		o<wh_cycle-0> else
			#<w> = [#<min_w> + [#<final_w> - #<min_w>] * #<cycle> / [#<cycle_count> - 1]]
		o<wh_cycle-0> endif	
		
		#<cycle> = [#<cycle> + 1]
		
		(Calc / define ALL apexes and references point depending on rot and cut dir)
		o<l10> if [#<dir> EQ 2] (cw)
			o<rotate-xy> CALL [#<x> + #<l>] [#<y> + [#<w> / 2]] [#<x>] [#<y>] [#<rot>]
				#<x1> = #<_rotate_result_x>
				#<y1> = #<_rotate_result_y>
			o<rotate-xy> CALL [#<x> + #<l>] [#<y> - [#<w> / 2]] [#<x>] [#<y>] [#<rot>]
				#<x2> = #<_rotate_result_x>
				#<y2> = #<_rotate_result_y>
			o<rotate-xy> CALL [#<x> - #<lm>] [#<y> - [#<w> / 2]] [#<x>] [#<y>] [#<rot>]
				#<x3> = #<_rotate_result_x>
				#<y3> = #<_rotate_result_y>
			o<rotate-xy> CALL [#<x> - #<lm>] [#<y> + [#<w> / 2]] [#<x>] [#<y>] [#<rot>]
				#<x4> = #<_rotate_result_x>
				#<y4> = #<_rotate_result_y>
		o<l10> else (CCW)
			o<rotate-xy> CALL [#<x> - #<lm>] [#<y> + [#<w> / 2]] [#<x>] [#<y>] [#<rot>]
				#<x1> = #<_rotate_result_x>
				#<y1> = #<_rotate_result_y>
			o<rotate-xy> CALL [#<x> - #<lm>] [#<y> - [#<w> / 2]] [#<x>] [#<y>] [#<rot>]
				#<x2> = #<_rotate_result_x>
				#<y2> = #<_rotate_result_y>
			o<rotate-xy> CALL [#<x> + #<l>] [#<y> - [#<w> / 2]] [#<x>] [#<y>] [#<rot>]
				#<x3> = #<_rotate_result_x>
				#<y3> = #<_rotate_result_y>
			o<rotate-xy> CALL [#<x> + #<l>] [#<y> + [#<w> / 2]] [#<x>] [#<y>] [#<rot>]
				#<x4> = #<_rotate_result_x>
				#<y4> = #<_rotate_result_y>
		o<l10> endif
	
		(define I and J offsets)
		#<i12> = [[#<x2> - #<x1>] / 2]
		#<j12> = [[#<y2> - #<y1>] / 2]
		#<i34> = [[#<x4> - #<x3>] / 2]
		#<j34> = [[#<y4> - #<y3>] / 2]         

		o<len_calc> if [#<cut_opt> EQ 1] (Inside=0:Outside=1:On the line=2:Create a pocket=3)
			#<len_arc> = [[#<w> + #5410] * 3.141592 / 2]
		o<len_calc> elseif [#<cut_opt> EQ 2]
			#<len_arc> = [#<w> * 3.141592 / 2]
		o<len_calc> else
			#<len_arc> = [[#<w> - #5410] * 3.141592 / 2]
		o<len_calc> endif	

		#<_cut_to:seg_z> = #<cut_start>
		
		#<final_loop> = 1
		o<will_show_final> if [#<cycle> EQ #<cycle_count>]
			/ #<show_final> = [#10 + 10]
		o<will_show_final> else
			#<show_final> = 0
		o<will_show_final> endif

		F#<_ffeed>
		S#<_spindle_rpm>
		
		o<fv_entry-arc> call [#<x1>] [#<y1>] [#<x2>] [#<y2>] [#<dir>] [#<cut_opt>] [#<cut_start>]		

		o<wh010> while [[#<_cut_to:seg_z> GT #<cut_depth>] OR #<final_loop> OR #<show_final>]
		
			o<wh010-final> if [#<_cut_to:seg_z> GT #<cut_depth>]
				#<_cut_to:loop_end_z> = [#<_cut_to:seg_z> + #<_depth_step>]
				o<wh-if1> if [#<_cut_to:loop_end_z> LT #<cut_depth>]
					#<_cut_to:loop_end_z> = #<cut_depth>
				o<wh-if1> endif
		
				o<oval_plunge> if [#<_plunge_down>]
					F#<_vertical_feed>
					G1 Z#<_cut_to:loop_end_z>
					#<_cut_to:seg_z> = #<_cut_to:loop_end_z>
					F#<_ffeed>
				o<oval_plunge> endif
			o<wh010-final> else
				#<final_loop> = 0
				F#<_final_feed>
				S#<_final_spindle_rpm>
			o<wh010-final> endif
				
	   		o<fv_cut-to> CALL [#<x2>] [#<y2>] [#<len_arc>] [#<dir>] [#<i12>] [#<j12>]
	  		o<fv_cut-to> CALL [#<x3>] [#<y3>] [#<l> + #<lm>]
			o<fv_cut-to> CALL [#<x4>] [#<y4>] [#<len_arc>] [#<dir>] [#<i34>] [#<j34>]
			o<fv_cut-to> CALL [#<x1>] [#<y1>] [#<l> + #<lm>]
		
			(Draw reference lines)			
			o<show_final_cut> if [#<final_loop> EQ 0]
				o<show_final_cut-1> if [#<_show_final_cuts> AND [#<show_final> EQ 11] AND #<_show_bottom_cut>] 
					G40
					G0 X#<x1> Y#<y1>
					#<show_final> = 8
				o<show_final_cut-1> elseif [#<_show_final_cuts> AND [#<show_final> EQ 11] OR [#<show_final> EQ 8]]
					#<_cut_to:seg_z> = #<cut_start>
					#<cut_depth> = #<cut_start>
					#<_cut_to:loop_end_z> = #<cut_start>
					G40
					G0 X#<x1> Y#<y1>
					G0 Z#<cut_start>				
					#<show_final> = 1
				o<show_final_cut-1> else
					#<show_final> = 0
				o<show_final_cut-1> endif	
			o<show_final_cut> endif
		
		o<wh010> endwhile
	o<wh_cycle> endwhile

	G0 Z#<_z_clear>
	G40 (no compensation)
	         
o<fv_slot> endsub
